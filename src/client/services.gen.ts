// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetCollectionResourceEncorejobGet1Data, GetCollectionResourceEncorejobGet1Response, PostCollectionResourceEncorejobPostData, PostCollectionResourceEncorejobPostResponse, ExecuteSearchEncorejobGetData, ExecuteSearchEncorejobGetResponse, GetItemResourceEncorejobGetData, GetItemResourceEncorejobGetResponse, PutItemResourceEncorejobPutData, PutItemResourceEncorejobPutResponse, DeleteItemResourceEncorejobDeleteData, DeleteItemResourceEncorejobDeleteResponse, PatchItemResourceEncorejobPatchData, PatchItemResourceEncorejobPatchResponse, CancelData, CancelResponse, GetQueueResponse } from './types.gen';

/**
 * get-encorejob
 * @param data The data for the request.
 * @param data.page Zero-based page index (0..N)
 * @param data.size The size of the page to be returned
 * @param data.sort Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
 * @returns PagedModelEntityModelEncoreJob OK
 * @throws ApiError
 */
export const getCollectionResourceEncorejobGet1 = (data: GetCollectionResourceEncorejobGet1Data = {}): CancelablePromise<GetCollectionResourceEncorejobGet1Response> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/encoreJobs',
    query: {
        page: data.page,
        size: data.size,
        sort: data.sort
    }
}); };

/**
 * create-encorejob
 * @param data The data for the request.
 * @param data.requestBody
 * @returns EntityModelEncoreJob Created
 * @throws ApiError
 */
export const postCollectionResourceEncorejobPost = (data: PostCollectionResourceEncorejobPostData): CancelablePromise<PostCollectionResourceEncorejobPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/encoreJobs',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Find EncoreJobs By Status
 * Returns EncoreJobs according to the given Status
 * @param data The data for the request.
 * @param data.status
 * @param data.page Zero-based page index (0..N)
 * @param data.size The size of the page to be returned
 * @param data.sort Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
 * @returns PagedModelEntityModelEncoreJob OK
 * @throws ApiError
 */
export const executeSearchEncorejobGet = (data: ExecuteSearchEncorejobGetData = {}): CancelablePromise<ExecuteSearchEncorejobGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/encoreJobs/search/findByStatus',
    query: {
        status: data.status,
        page: data.page,
        size: data.size,
        sort: data.sort
    },
    errors: {
        404: 'Not Found'
    }
}); };

/**
 * get-encorejob
 * @param data The data for the request.
 * @param data.id
 * @returns EntityModelEncoreJob OK
 * @throws ApiError
 */
export const getItemResourceEncorejobGet = (data: GetItemResourceEncorejobGetData): CancelablePromise<GetItemResourceEncorejobGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/encoreJobs/{id}',
    path: {
        id: data.id
    },
    errors: {
        404: 'Not Found'
    }
}); };

/**
 * update-encorejob
 * @param data The data for the request.
 * @param data.id
 * @param data.requestBody
 * @returns EntityModelEncoreJob OK
 * @returns void No Content
 * @throws ApiError
 */
export const putItemResourceEncorejobPut = (data: PutItemResourceEncorejobPutData): CancelablePromise<PutItemResourceEncorejobPutResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/encoreJobs/{id}',
    path: {
        id: data.id
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * delete-encorejob
 * @param data The data for the request.
 * @param data.id
 * @returns void No Content
 * @throws ApiError
 */
export const deleteItemResourceEncorejobDelete = (data: DeleteItemResourceEncorejobDeleteData): CancelablePromise<DeleteItemResourceEncorejobDeleteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/encoreJobs/{id}',
    path: {
        id: data.id
    },
    errors: {
        404: 'Not Found'
    }
}); };

/**
 * patch-encorejob
 * @param data The data for the request.
 * @param data.id
 * @param data.requestBody
 * @returns EntityModelEncoreJob OK
 * @returns void No Content
 * @throws ApiError
 */
export const patchItemResourceEncorejobPatch = (data: PatchItemResourceEncorejobPatchData): CancelablePromise<PatchItemResourceEncorejobPatchResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/encoreJobs/{id}',
    path: {
        id: data.id
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Cancel an EncoreJob
 * Cancels an EncoreJob with thw given JobId
 * @param data The data for the request.
 * @param data.jobId
 * @returns string OK
 * @throws ApiError
 */
export const cancel = (data: CancelData): CancelablePromise<CancelResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/encoreJobs/{jobId}/cancel',
    path: {
        jobId: data.jobId
    }
}); };

/**
 * Get Queues
 * Returns a list of queues (QueueItems)
 * @returns QueueItem OK
 * @throws ApiError
 */
export const getQueue = (): CancelablePromise<GetQueueResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/queue'
}); };